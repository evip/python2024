Phần Cơ bản

1. Phát biểu điều kiện, if/else
Bài 1:
Viết chương trình nhập vào một số nguyên n. Kiểm tra xem n có lớn hơn 0 hay không. Nếu có, in ra "Số dương", ngược lại in ra "Số không dương".

n = int(input("Nhập số nguyên n: "))
if n > 0:
    print("Số dương")
else:
    print("Số không dương")


Bài 2:
Viết chương trình nhập vào một năm y. Kiểm tra xem y có phải là năm nhuận hay không. (Năm nhuận là năm chia hết cho 4 nhưng không chia hết cho 100, hoặc chia hết cho 400). In ra "Năm nhuận" hoặc "Không phải năm nhuận".

y = int(input("Nhập năm: "))
if (y % 400 == 0) or (y % 4 == 0 and y % 100 != 0):
    print("Năm nhuận")
else:
    print("Không phải năm nhuận")


2. Lệnh if/else (mở rộng thêm điều kiện lồng nhau)

Bài 3:
Viết chương trình nhập vào điểm số (0 - 10) và in ra xếp loại:

Điểm >= 8: "Giỏi"
6.5 <= Điểm < 8: "Khá"
5 <= Điểm < 6.5: "Trung bình"
<5: "Yếu"

diem = float(input("Nhập điểm (0-10): "))
if diem >= 8:
    print("Giỏi")
elif diem >= 6.5:
    print("Khá")
elif diem >= 5:
    print("Trung bình")
else:
    print("Yếu")


Bài 4:
Viết chương trình nhập vào một số nguyên và kiểm tra:

Nếu số đó chia hết cho 2 và chia hết cho 3, in "Chia hết cho 2 và 3"
Nếu số đó chỉ chia hết cho 2, in "Chia hết cho 2"
Nếu số đó chỉ chia hết cho 3, in "Chia hết cho 3"
Nếu không chia hết cho 2 và 3, in "Không chia hết cho 2 và 3"

x = int(input("Nhập số nguyên: "))
if x % 2 == 0 and x % 3 == 0:
    print("Chia hết cho 2 và 3")
elif x % 2 == 0:
    print("Chia hết cho 2")
elif x % 3 == 0:
    print("Chia hết cho 3")
else:
    print("Không chia hết cho 2 và 3")


3. Lệnh lặp for

Bài 5:
Viết chương trình in ra các số từ 1 đến 10 sử dụng vòng lặp for.

for i in range(1, 11):
    print(i)


Bài 6:
Viết chương trình in ra tổng các số từ 1 đến n (n nhập từ bàn phím) sử dụng vòng lặp for.
n = int(input("Nhập n: "))
tong = 0
for i in range(1, n+1):
    tong += i
print("Tổng =", tong)

4. Lệnh lặp for và danh sách

Bài 7:
Cho một danh sách numbers = [1, 2, 3, 4, 5]. Dùng for duyệt qua từng phần tử và in ra từng phần tử.
numbers = [1, 2, 3, 4, 5]
for num in numbers:
    print(num)


Bài 8:
Nhập vào một danh sách các số nguyên (ví dụ: numbers = [3, 5, -1, 10, 0]). Dùng for để tính tổng các phần tử trong danh sách.
s = input("Nhập danh sách số, cách nhau bởi dấu cách: ")
parts = s.split()
mapped = map(int, parts)
lst = list(mapped)

tong = 0
for num in lst:
    tong += num
print("Tổng =", tong)


5. Lệnh lặp for và từ điển

Bài 9:
Cho một từ điển student = {"name": "An", "age": 20, "class": "Python"}. Dùng vòng lặp for duyệt qua các khóa (keys) và in ra key và value tương ứng.

student = {"name": "An", "age": 20, "class": "Python"}
for key in student:
    print(key, ":", student[key])


Bài 10:
Cho một từ điển chứa tên sản phẩm và giá (VD: prices = {"apple": 10, "banana": 5, "orange": 7}). Dùng for để in ra sản phẩm nào có giá lớn hơn 6.
prices = {"apple": 10, "banana": 5, "orange": 7}
for product in prices:
    if prices[product] > 6:
        print(product, "có giá >", 6)


6. Lệnh lặp while
Bài 11:
Viết chương trình dùng vòng lặp while in ra các số từ 1 đến 5.
i = 1
while i <= 5:
    print(i)
    i += 1


Bài 12:
Viết chương trình nhập vào một số nguyên n. Dùng while để tính giai thừa của n.
n = int(input("Nhập n: "))
gt = 1
i = 1
while i <= n:
    gt *= i
    i += 1
print("Giai thừa của", n, "là:", gt)


7. Lệnh break và continue

Bài 13:
Dùng vòng lặp for để in các số từ 1 đến 10, nhưng nếu gặp số 5 thì dừng vòng lặp (dùng break).
for i in range(1, 11):
    if i == 5:
        break
    print(i)

Bài 14:

Dùng vòng lặp for để in các số từ 1 đến 10, nhưng bỏ qua số 5 (dùng continue).

for i in range(1, 11):
    if i == 5:
        continue
    print(i)


Bài 15:

Cho một danh sách các số nguyên, yêu cầu:

Dùng for để in ra các số dương.
Dùng while để tính tổng các số âm.
Sử dụng break để dừng việc in ra nếu gặp số 0.

numbers = [3, 5, -1, 10, 0, -2, 4]
# 1. Dùng for in ra số dương
print("Các số dương:")
for num in numbers:
    if num > 0:
        print(num)
        
# 2. Dùng while tính tổng số âm
i = 0
tong_am = 0
while i < len(numbers):
    if numbers[i] < 0:
        tong_am += numbers[i]
    i += 1
print("Tổng các số âm:", tong_am)

# 3. Dùng break dừng in ra nếu gặp số 0
print("In đến khi gặp 0:")
for num in numbers:
    if num == 0:
        break
    print(num)


Bài 16:
Viết chương trình yêu cầu người dùng nhập vào một dãy số (kết thúc nhập khi người dùng gõ số 0). Sau khi kết thúc nhập, tính và in ra trung bình cộng của các số dương, đồng thời in ra tổng các số âm. (Sử dụng tổng hợp if, for, while, break).

arr = []
while True:
    x = int(input("Nhập số (0 để kết thúc): "))
    if x == 0:
        break
    arr.append(x)

# Tính trung bình cộng số dương
positive_numbers = [num for num in arr if num > 0]
if len(positive_numbers) > 0:
    avg_positive = sum(positive_numbers) / len(positive_numbers)
else:
    avg_positive = 0

# Tính tổng số âm
negative_numbers = [num for num in arr if num < 0]
tong_am = sum(negative_numbers)

print("Trung bình cộng số dương:", avg_positive)
print("Tổng số âm:", tong_am)





